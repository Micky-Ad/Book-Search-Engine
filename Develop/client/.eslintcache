[{"C:\\Users\\micky\\Desktop\\Weekly Challenges\\week21\\Book-Search-Engine\\Develop\\client\\src\\index.js":"1","C:\\Users\\micky\\Desktop\\Weekly Challenges\\week21\\Book-Search-Engine\\Develop\\client\\src\\App.js":"2","C:\\Users\\micky\\Desktop\\Weekly Challenges\\week21\\Book-Search-Engine\\Develop\\client\\src\\pages\\SearchBooks.js":"3","C:\\Users\\micky\\Desktop\\Weekly Challenges\\week21\\Book-Search-Engine\\Develop\\client\\src\\pages\\SavedBooks.js":"4","C:\\Users\\micky\\Desktop\\Weekly Challenges\\week21\\Book-Search-Engine\\Develop\\client\\src\\components\\Navbar.js":"5","C:\\Users\\micky\\Desktop\\Weekly Challenges\\week21\\Book-Search-Engine\\Develop\\client\\src\\components\\SignupForm.js":"6","C:\\Users\\micky\\Desktop\\Weekly Challenges\\week21\\Book-Search-Engine\\Develop\\client\\src\\components\\LoginForm.js":"7","C:\\Users\\micky\\Desktop\\Weekly Challenges\\week21\\Book-Search-Engine\\Develop\\client\\src\\utils\\localStorage.js":"8","C:\\Users\\micky\\Desktop\\Weekly Challenges\\week21\\Book-Search-Engine\\Develop\\client\\src\\utils\\mutations.js":"9","C:\\Users\\micky\\Desktop\\Weekly Challenges\\week21\\Book-Search-Engine\\Develop\\client\\src\\utils\\API.js":"10","C:\\Users\\micky\\Desktop\\Weekly Challenges\\week21\\Book-Search-Engine\\Develop\\client\\src\\utils\\auth.js":"11","C:\\Users\\micky\\Desktop\\Weekly Challenges\\week21\\Book-Search-Engine\\Develop\\client\\src\\utils\\queries.js":"12"},{"size":266,"mtime":1676731533816,"results":"13","hashOfConfig":"14"},{"size":1381,"mtime":1676755895514,"results":"15","hashOfConfig":"14"},{"size":5276,"mtime":1676757375990,"results":"16","hashOfConfig":"14"},{"size":3517,"mtime":1676734080075,"results":"17","hashOfConfig":"14"},{"size":2524,"mtime":1674776555600,"results":"18","hashOfConfig":"14"},{"size":4375,"mtime":1676732036372,"results":"19","hashOfConfig":"14"},{"size":2984,"mtime":1676732883944,"results":"20","hashOfConfig":"14"},{"size":793,"mtime":1674776555608,"results":"21","hashOfConfig":"14"},{"size":1192,"mtime":1676647795834,"results":"22","hashOfConfig":"14"},{"size":1533,"mtime":1676732408433,"results":"23","hashOfConfig":"14"},{"size":1234,"mtime":1674776555608,"results":"24","hashOfConfig":"14"},{"size":293,"mtime":1676650728609,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"p54snr",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\micky\\Desktop\\Weekly Challenges\\week21\\Book-Search-Engine\\Develop\\client\\src\\index.js",[],["55","56"],"C:\\Users\\micky\\Desktop\\Weekly Challenges\\week21\\Book-Search-Engine\\Develop\\client\\src\\App.js",[],"C:\\Users\\micky\\Desktop\\Weekly Challenges\\week21\\Book-Search-Engine\\Develop\\client\\src\\pages\\SearchBooks.js",["57","58","59","60"],"C:\\Users\\micky\\Desktop\\Weekly Challenges\\week21\\Book-Search-Engine\\Develop\\client\\src\\pages\\SavedBooks.js",["61","62","63","64","65","66","67","68","69"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Jumbotron,\n  Container,\n  CardColumns,\n  Card,\n  Button,\n} from \"react-bootstrap\";\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_ME } from \"../utils/queries\";\nimport { REMOVE_BOOK } from \"../utils/mutations\";\n\nimport { getMe, deleteBook } from \"../utils/API\";\nimport Auth from \"../utils/auth\";\nimport { removeBookId } from \"../utils/localStorage\";\n\nconst SavedBooks = () => {\n  // const [userData, setUserData] = useState({});\n\n  const [removeBook, { error, updatedUser }] = useMutation(REMOVE_BOOK);\n\n  // use this to determine if `useEffect()` hook needs to run again\n  const userDataLength = Object.keys(userData).length;\n\n  const { loading, userData } = useQuery(GET_ME);\n\n  // useEffect(() => {\n  //   const getUserData = async () => {\n  //     try {\n  //       const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n  //       if (!token) {\n  //         return false;\n  //       }\n\n  //       const response = await getMe(token);\n\n  //       if (!response.ok) {\n  //         throw new Error('something went wrong!');\n  //       }\n\n  //       const user = await response.json();\n  //       setUserData(user);\n  //     } catch (err) {\n  //       console.error(err);\n  //     }\n  //   };\n\n  //   getUserData();\n  // }, [userDataLength]);\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      // const response = await deleteBook(bookId, token);\n\n      // if (!response.ok) {\n      //   throw new Error(\"something went wrong!\");\n      // }\n\n      // const updatedUser = await response.json();\n      // setUserData(updatedUser);\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (!userDataLength) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${\n                userData.savedBooks.length === 1 ? \"book\" : \"books\"\n              }:`\n            : \"You have no saved books!\"}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border=\"dark\">\n                {book.image ? (\n                  <Card.Img\n                    src={book.image}\n                    alt={`The cover for ${book.title}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className=\"small\">Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button\n                    className=\"btn-block btn-danger\"\n                    onClick={() => handleDeleteBook(book.bookId)}\n                  >\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n","C:\\Users\\micky\\Desktop\\Weekly Challenges\\week21\\Book-Search-Engine\\Develop\\client\\src\\components\\Navbar.js",[],"C:\\Users\\micky\\Desktop\\Weekly Challenges\\week21\\Book-Search-Engine\\Develop\\client\\src\\components\\SignupForm.js",["70","71","72","73"],"import React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nimport { createUser } from \"../utils/API\";\nimport Auth from \"../utils/auth\";\n\nconst SignupForm = () => {\n  const [formState, setFormState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [userFormData, setUserFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // // set initial form state\n\n    // const handleInputChange = (event) => {\n    //   const { name, value } = event.target;\n    //   setUserFormData({ ...userFormData, [name]: value });\n    // };\n\n    // const handleFormSubmit = async (event) => {\n    //   event.preventDefault();\n\n    //   // check if form has everything (as per react-bootstrap docs)\n    //   const form = event.currentTarget;\n    //   if (form.checkValidity() === false) {\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //   }\n\n    //   try {\n    //     const [addUser, { error, data }] = useMutation(ADD_USER);\n    //     // const response = await createUser(userFormData);\n\n    //     // if (!response.ok) {\n    //     //   throw new Error(\"something went wrong!\");\n    //     // }\n\n    //     // const { token, user } = await response.json();\n    //     // console.log(user);\n    //     Auth.login(token);\n    //   } catch (err) {\n    //     console.error(err);\n    //     setShowAlert(true);\n    //   }\n\n    //   setUserFormData({\n    //     username: \"\",\n    //     email: \"\",\n    //     password: \"\",\n    //   });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"username\">Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your username\"\n            name=\"username\"\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Username is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Your email address\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={\n            !(\n              userFormData.username &&\n              userFormData.email &&\n              userFormData.password\n            )\n          }\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","C:\\Users\\micky\\Desktop\\Weekly Challenges\\week21\\Book-Search-Engine\\Develop\\client\\src\\components\\LoginForm.js",["74","75","76","77"],"// see SignupForm.js for comments\nimport React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport { loginUser } from \"../utils/API\";\nimport Auth from \"../utils/auth\";\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: \"\", password: \"\" });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [addUser, { error, data }] = useMutation(LOGIN_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const response = await addUser(\n        null,\n        userFormData.email,\n        userFormData.password\n      );\n      // const response = await loginUser(userFormData);\n\n      if (!response.ok) {\n        throw new Error(\"something went wrong!\");\n      }\n\n      // const { token, user } = await response.json();\n\n      // Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your email\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","C:\\Users\\micky\\Desktop\\Weekly Challenges\\week21\\Book-Search-Engine\\Develop\\client\\src\\utils\\localStorage.js",[],"C:\\Users\\micky\\Desktop\\Weekly Challenges\\week21\\Book-Search-Engine\\Develop\\client\\src\\utils\\mutations.js",[],"C:\\Users\\micky\\Desktop\\Weekly Challenges\\week21\\Book-Search-Engine\\Develop\\client\\src\\utils\\API.js",[],"C:\\Users\\micky\\Desktop\\Weekly Challenges\\week21\\Book-Search-Engine\\Develop\\client\\src\\utils\\auth.js",["78"],"// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","C:\\Users\\micky\\Desktop\\Weekly Challenges\\week21\\Book-Search-Engine\\Develop\\client\\src\\utils\\queries.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":26,"column":24,"nodeType":"85","messageId":"86","endLine":26,"endColumn":39},{"ruleId":"83","severity":1,"message":"87","line":28,"column":10,"nodeType":"85","messageId":"86","endLine":28,"endColumn":18},{"ruleId":"83","severity":1,"message":"88","line":28,"column":22,"nodeType":"85","messageId":"86","endLine":28,"endColumn":27},{"ruleId":"83","severity":1,"message":"89","line":28,"column":29,"nodeType":"85","messageId":"86","endLine":28,"endColumn":33},{"ruleId":"83","severity":1,"message":"90","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"91","line":1,"column":27,"nodeType":"85","messageId":"86","endLine":1,"endColumn":36},{"ruleId":"83","severity":1,"message":"92","line":14,"column":10,"nodeType":"85","messageId":"86","endLine":14,"endColumn":15},{"ruleId":"83","severity":1,"message":"93","line":14,"column":17,"nodeType":"85","messageId":"86","endLine":14,"endColumn":27},{"ruleId":"83","severity":1,"message":"94","line":21,"column":10,"nodeType":"85","messageId":"86","endLine":21,"endColumn":20},{"ruleId":"83","severity":1,"message":"88","line":21,"column":24,"nodeType":"85","messageId":"86","endLine":21,"endColumn":29},{"ruleId":"83","severity":1,"message":"95","line":21,"column":31,"nodeType":"85","messageId":"86","endLine":21,"endColumn":42},{"ruleId":"96","severity":1,"message":"97","line":24,"column":38,"nodeType":"85","messageId":"98","endLine":24,"endColumn":46},{"ruleId":"83","severity":1,"message":"99","line":26,"column":11,"nodeType":"85","messageId":"86","endLine":26,"endColumn":18},{"ruleId":"83","severity":1,"message":"100","line":6,"column":10,"nodeType":"85","messageId":"86","endLine":6,"endColumn":20},{"ruleId":"83","severity":1,"message":"88","line":15,"column":21,"nodeType":"85","messageId":"86","endLine":15,"endColumn":26},{"ruleId":"83","severity":1,"message":"89","line":15,"column":28,"nodeType":"85","messageId":"86","endLine":15,"endColumn":32},{"ruleId":"83","severity":1,"message":"101","line":20,"column":24,"nodeType":"85","messageId":"86","endLine":20,"endColumn":39},{"ruleId":"83","severity":1,"message":"102","line":6,"column":10,"nodeType":"85","messageId":"86","endLine":6,"endColumn":19},{"ruleId":"83","severity":1,"message":"103","line":7,"column":8,"nodeType":"85","messageId":"86","endLine":7,"endColumn":12},{"ruleId":"83","severity":1,"message":"88","line":14,"column":21,"nodeType":"85","messageId":"86","endLine":14,"endColumn":26},{"ruleId":"83","severity":1,"message":"89","line":14,"column":28,"nodeType":"85","messageId":"86","endLine":14,"endColumn":32},{"ruleId":"104","severity":1,"message":"105","line":49,"column":1,"nodeType":"106","endLine":49,"endColumn":34},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'setSavedBookIds' is assigned a value but never used.","Identifier","unusedVar","'saveBook' is assigned a value but never used.","'error' is assigned a value but never used.","'data' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'getMe' is defined but never used.","'deleteBook' is defined but never used.","'removeBook' is assigned a value but never used.","'updatedUser' is assigned a value but never used.","no-use-before-define","'userData' was used before it was defined.","usedBeforeDefined","'loading' is assigned a value but never used.","'createUser' is defined but never used.","'setUserFormData' is assigned a value but never used.","'loginUser' is defined but never used.","'Auth' is defined but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]